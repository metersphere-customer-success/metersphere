<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.metersphere.base.mapper.ext.ExtUiElementMapper">
    <select id="groupByModuleId" resultType="java.util.Map">
        select module_id AS moduleId,
               count(id) AS countNum
        from ui_element ue
        <include refid="queryWhereCondition"/>
        GROUP BY module_id
    </select>
    <select id="list" resultType="io.metersphere.base.domain.UiElement">
        select
        <include refid="io.metersphere.base.mapper.UiElementMapper.Base_Column_List"/>
        from ui_element ue
        <include refid="queryWhereCondition"/>
        <include refid="io.metersphere.base.mapper.ext.ExtBaseMapper.orders"/>
    </select>

    <select id="listIdsByQuery" resultType="String">
        select
        ue.id
        from ui_element ue
        <include refid="queryWhereCondition"/>
        <include refid="io.metersphere.base.mapper.ext.ExtBaseMapper.orders"/>
    </select>

    <select id="getPreOrder" resultType="java.lang.Long">
        select `order` from ui_element where project_id = #{projectId}
        <if test="baseOrder != null">
            and `order` &lt; #{baseOrder}
        </if>
        order by `order` desc limit 1;
    </select>

    <select id="getLastOrder" resultType="java.lang.Long">
        select `order` from ui_element where project_id = #{projectId}
        <if test="baseOrder != null">
            and `order` &gt; #{baseOrder}
        </if>
        order by `order` desc limit 1;
    </select>

    <select id="getMaxNumByProjectId" resultType="io.metersphere.base.domain.UiElement">
        SELECT *
        FROM ui_element
        WHERE ui_element.project_id = #{projectId}
        ORDER BY num DESC
        LIMIT 1;
    </select>
    <select id="listNames" resultType="io.metersphere.base.domain.UiElement">
        select
        id, name, module_id
        from ui_element ue
        <include refid="queryWhereCondition"/>
        <include refid="io.metersphere.base.mapper.ext.ExtBaseMapper.orders"/>
    </select>


    <select id="listModuleByCollection" resultType="java.util.Map">
        select ue.module_id AS moduleId,count(ue.id) AS countNum from ui_element ue
        <include refid="queryWhereCondition"/>
        GROUP BY ue.module_id
    </select>

    <sql id="queryWhereCondition">
        <where>
            <if test="request.name != null">
                and ue.name LIKE CONCAT('%', #{request.name}, '%')
            </if>

            <if test="request.ids != null and request.ids.size() > 0">
                and ue.id in
                <foreach collection="request.ids" item="id" separator="," open="(" close=")">
                    #{id}
                </foreach>
            </if>

            and project_id = #{request.projectId}

            <if test="request.moduleIds != null and request.moduleIds.size() > 0">
                and ue.module_id in
                <foreach collection="request.moduleIds" item="moduleId" separator="," open="(" close=")">
                    #{moduleId}
                </foreach>
            </if>

            <if test="request.filters != null and request.filters.size() > 0">
                <foreach collection="request.filters.entrySet()" index="key" item="values">
                    <if test="values != null and values.size() > 0">
                        <choose>
                            <when test="key=='location_type'">
                                and ue.location_type in
                                <foreach collection="values" item="value" separator="," open="(" close=")">
                                    #{value}
                                </foreach>
                            </when>
                            <when test="key=='create_user'">
                                and ue.create_user in
                                <foreach collection="values" item="value" separator="," open="(" close=")">
                                    #{value}
                                </foreach>
                            </when>
                        </choose>
                    </if>
                </foreach>
            </if>
        </where>
    </sql>

    <select id="getNextNum" resultType="io.metersphere.base.domain.UiElement">
        SELECT *
        FROM ui_element
        WHERE ui_element.project_id = #{projectId}
        ORDER BY num DESC LIMIT 1;
    </select>
</mapper>
